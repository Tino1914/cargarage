{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_CLIENTS, GET_CLIENT, DELETE_CLIENT } from \"./types\";\nexport const createClient = (client, history) => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/client\", client);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {} //clear out errors form previous state \n\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getClients = () => async dispatch => {\n  const res = await axios.get(\"/api/client/all\");\n  dispatch({\n    type: GET_CLIENTS,\n    payload: res.data\n  });\n};\nexport const getClient = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/client/${id}`);\n    dispatch({\n      type: GET_CLIENT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\"); //redirect you if there is no such project existing\n  }\n};\nexport const deleteClient = id => async dispatch => {\n  if (window.confirm(\"Are you sure you want to delete this client and his information\")) {\n    await axios.delete(`/api/client/${id}`);\n    dispatch({\n      type: DELETE_CLIENT,\n      payload: id\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Tino/Desktop/GITHUBA MI/cargarage/React-Front End/src/actions/clientActions.js"],"names":["axios","GET_ERRORS","GET_CLIENTS","GET_CLIENT","DELETE_CLIENT","createClient","client","history","dispatch","res","post","push","type","payload","error","response","data","getClients","get","getClient","id","deleteClient","window","confirm","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,aAA9C,QAAmE,SAAnE;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB,MAAMC,QAAN,IAAkB;AAC/D,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,aAAX,EAA0BJ,MAA1B,CAAlB;AACAC,IAAAA,OAAO,CAACI,IAAR,CAAa,YAAb;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,UADD;AAELY,MAAAA,OAAO,EAAE,EAFJ,CAEM;;AAFN,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZN,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,UADD;AAELY,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeC;AAFnB,KAAD,CAAR;AAIH;AACJ,CAdM;AAkBP,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMT,QAAN,IAAkB;AAC9C,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAACkB,GAAN,CAAU,iBAAV,CAAlB;AACAV,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEV,WADD;AAELW,IAAAA,OAAO,EAAEJ,GAAG,CAACO;AAFR,GAAD,CAAR;AAIH,CANM;AAUP,OAAO,MAAMG,SAAS,GAAG,CAACC,EAAD,EAAKb,OAAL,KAAiB,MAAMC,QAAN,IAAkB;AAEzD,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACkB,GAAN,CAAW,eAAcE,EAAG,EAA5B,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,UADD;AAELU,MAAAA,OAAO,EAAEJ,GAAG,CAACO;AAFR,KAAD,CAAR;AAIA,GAND,CAME,OAAOF,KAAP,EAAc;AACZP,IAAAA,OAAO,CAACI,IAAR,CAAa,YAAb,EADY,CACe;AAC9B;AAMH,CAhBM;AAmBP,OAAO,MAAMU,YAAY,GAAGD,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AACjD,MAAGc,MAAM,CAACC,OAAP,CAAe,iEAAf,CAAH,EAEC;AACA,UAAMvB,KAAK,CAACwB,MAAN,CAAc,eAAcJ,EAAG,EAA/B,CAAN;AACAZ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAER,aADD;AAELS,MAAAA,OAAO,EAAEO;AAFJ,KAAD,CAAR;AAIA;AAIH,CAbM","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_CLIENTS, GET_CLIENT, DELETE_CLIENT } from \"./types\";\r\n\r\n\r\nexport const createClient = (client, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.post(\"/api/client\", client)\r\n        history.push(\"/dashboard\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}//clear out errors form previous state \r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const getClients = () => async dispatch => {\r\n    const res = await axios.get(\"/api/client/all\")\r\n    dispatch({\r\n        type: GET_CLIENTS,\r\n        payload: res.data\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const getClient = (id, history) => async dispatch => {\r\n\r\n   try {\r\n    const res = await axios.get(`/api/client/${id}`)\r\n    dispatch({\r\n        type: GET_CLIENT,\r\n        payload: res.data\r\n    });\r\n   } catch (error) {\r\n       history.push(\"/dashboard\");//redirect you if there is no such project existing\r\n   }\r\n\r\n\r\n\r\n\r\n  \r\n};\r\n\r\n\r\nexport const deleteClient = id => async dispatch => {\r\n   if(window.confirm(\"Are you sure you want to delete this client and his information\"\r\n   )\r\n   ){\r\n    await axios.delete(`/api/client/${id}`)\r\n    dispatch({\r\n        type: DELETE_CLIENT,\r\n        payload: id\r\n    });\r\n   }\r\n\r\n\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}